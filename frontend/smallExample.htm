<!DOCTYPE html>
<html>
    <head>
        <title>Leaflet sample</title>
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/leaflet-search@2.4.3/dist/leaflet-search.min.css" />
        <script src="https://unpkg.com/leaflet-search@2.4.3/dist/leaflet-search.min.js"></script>
     </head>

   <body>
      <div id="map" style="width: 900px; height: 580px"></div>
      <script>
        //Functions
        async function getDatasets(){
            console.log("Her kommer dataene")
            //linjene under fungerer ikke som tenkt enda

            const response = await fetch("http://qmsrest.westeurope.cloudapp.azure.com:8080/v1/datasets", {headers: {
              "Accept":  'application/vnd.kartverket.ngis.datasets+json'
            }})
            const dataSets=await response.json()
            console.log(dataSets)
        }
        const mockData=[{
  "id": "07b59e3d-a4b6-4bae-ac4c-664d3dc3d778",
  "name": "AR5_1",
  "resolution": 0.001,
  "crs_EPSG": 5972,
  "access": "read_write",
  "dataset_last_modified": "2021-03-15T09:57:41.915094000Z",
  "bbox": {
    "ll": [
    59.892205,
    10.740768300000013
    ],
    "ur": [
      637396.44,
      7296440.28
    ]
  }
}, {
  "id": "07b59e3d-a4b6-4bae-ac4c-664d3dc3d778",
  "name": "AR5_2",
  "resolution": 0.001,
  "crs_EPSG": 5972,
  "access": "read_write",
  "dataset_last_modified": "2021-03-15T09:57:41.915094000Z",
  "bbox": {
    "ll": [
    59.912205,
    10.740768300000013
    ],
    "ur": [
      637396.44,
      7296440.28
    ]
  }
},
{
  "id": "07b59e3d-a4b6-4bae-ac4c-664d3dc3d778",
  "name": "AR5_3",
  "resolution": 0.001,
  "crs_EPSG": 5972,
  "access": "read_write",
  "dataset_last_modified": "2021-03-15T09:57:41.915094000Z",
  "bbox": {
    "ll": [
    59.902205,
    10.750768300000013
    ],
    "ur": [
      637396.44,
      7296440.28
    ]
  }
}]
       
        //getDatasets()

        const center = [59.902205, 10.740768300000013]; // Oslo default
        var map = L.map('map').setView(center, 15); // Creating the map object
        
        // Adding base maps
        var osmHOT = L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
          zoom: 15
        }).addTo(map);
        var standardMap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
        
        // Creating marker layers with options 
        var OsloHavn = L.marker([59.902205, 10.740768300000013],{title: "Oslo"}).bindPopup("Oslo havn");
        var BergenHavn = L.marker([60.39207, 5.31195], {title: "Bergen"}).bindPopup("Bergen havn");

        // Adding marker layers to a feature group
        var cities = L.layerGroup([OsloHavn, BergenHavn]).addTo(map);

        var baseMaps = {
          "OpenStreetMap.HOT": osmHOT,
          "Standard": standardMap
        };
        var overlayMaps = {
          "Cities": cities,
        };
        var layerControl = L.control.layers(baseMaps, overlayMaps).addTo(map);

        // Adding search control
        
        var searchControl = new L.Control.Search({
          layer: cities,
          propertyName: 'title', // Property in the marker where search should be performed
          marker: false, // Set to true if you want to show a marker for the search result
          collapsed: false, // Set to true if you want the search control to be collapsed by default
          moveToLocation: function (latlng, title, map) {
            // Function to move the map to the selected search result
            map.setView(latlng, 15); // Set the zoom level as desired
          }
        })
        map.addControl(searchControl);
        console.log(mockData)
        console.log(mockData[0])
        const mockLayer=[]
        mockData.forEach(item => {
          var temp=L.marker(item["bbox"]["ll"], {title: item["name"]}).bindPopup(item["name"])
          mockLayer.push(temp)
        })
        console.log(mockLayer)
        
        layerControl.addOverlay(L.layerGroup(mockLayer), "mock")
  
      </script>
   </body>
</html>
